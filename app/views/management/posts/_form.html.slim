= form_with model: [:management, post], data: { controller: :prism } do |f|
  .admin-form__content
    = render 'shared/errors', object: post
    .row
      .col.d-grid.align-items-end
        = f.label :title, t('.title_label'), class: 'standart-label'
        = f.text_field :title, class: 'standart-input', placeholder: t('.placeholders.title')

      - I18n.available_locales.each do |locale|
        - next if locale == I18n.locale

        .col.d-grid.align-items-end
          .text-danger.text-small
            = t('.translation_notice')

          = f.label :title_localizations, "#{t("activerecord.attributes.post.title")} (#{t(locale).downcase})", for: "title_localizations[#{locale}]", class: 'standart-label d-inline'
          = f.text_field "title_localizations][#{locale}", id: "title_#{locale}", class: 'standart-input', data: { locale: locale.to_s }, value: current_data(@post, 'title', locale), placeholder: t('.placeholders.title')

    .row
      .col.d-grid.align-items-end
        = f.label :subtitle, t('.subtitle_label'), class: 'standart-label'
        = f.text_field :subtitle, class: 'standart-input', placeholder: t('.placeholders.subtitle')

      - I18n.available_locales.each do |locale|
        - next if locale == I18n.locale

        .col.d-grid.align-items-end
          = f.label :subtitle_localizations, "#{t("activerecord.attributes.post.subtitle")} (#{t(locale).downcase})", for: "subtitle", class: 'standart-label'
          = f.text_field "subtitle_localizations][#{locale}", id: "subtitle_#{locale}", class: 'standart-input', data: { locale: locale.to_s }, value: current_data(@post, 'subtitle', locale), placeholder: t('.placeholders.subtitle')

    = f.label :title, t('.photo_label'), class: 'standart-label'
    .image-content.group[data-controller='image-preview' data-image-preview-image-attached-value="#{@post.photo.present?}"]
      #preview.preview-img-box-edit.d-flex.justify-content-center.align-items-center[data-image-preview-target='background']
        = image_tag post_image(@post), alt: '', id: "file-ip-1-preview", class: 'admin-preview-img', data: { image_preview_target: :preview }
      label.main-btn[for="add-img"]
        svg.label-img[width="18" height="18" viewbox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"]
          path[d="M2 18C1.45 18 0.979 17.8043 0.587 17.413C0.195667 17.021 0 16.55 0 16V2C0 1.45 0.195667 0.979 0.587 0.587C0.979 0.195667 1.45 0 2 0H11V2H2V16H16V7H18V16C18 16.55 17.8043 17.021 17.413 17.413C17.021 17.8043 16.55 18 16 18H2ZM14 6V4H12V2H14V0H16V2H18V4H16V6H14ZM3 14H15L11.25 9L8.25 13L6 10L3 14Z" fill="white"]
        .mx-2.d-inline
          = t('.placeholders.select_image')
      = f.file_field :photo, id: 'add-img', accept: "image/*", class: "btn-main", data: { action: "change->image-preview#addImage" }

    .row data-controller="aitranslation" data-aitranslation-locale= I18n.locale
      .d-flex
        .col.me-5 id="basic-description"
          = f.label :description, t('.description_label'), class: 'standart-label'
          = f.text_area :description, class: "tinymce standart-input descr", 
                  id: 'default-editor', rows: 20, cols: 60, placeholder: t('.placeholders.description'),
                          data: { aitranslation_target: 'inputContainer' }
          = tinymce

        - I18n.available_locales.each do |locale|
          - next if locale == I18n.locale

          .col id="localized_description"
            = f.label :description_localizations, "#{t(".description_label")} (#{t(locale).downcase})", class: 'standart-label', for: "description_#{locale}"
            = f.text_area "description_localizations][#{locale}", class: "tinymce standart-input descr", 
                    id: "default-editor", rows: 20, cols: 60,
                            data: { locale: locale.to_s },
                                    value: current_data(@post, 'description', locale), placeholder: t('.placeholders.description')
            = tinymce
      .d-flex.justify-content-center.mt-2
        = link_to t('.translation_button'), "javascript:void(0)", data: { action: 'click->aitranslation#fetchData' }, id: 'translation-button', class: 'btn main-btn'
    .form-inner
      .group
        = f.label :tags, t('.tag_label'), class: 'standart-label'
        = f.collection_select :tag_ids, (tags || []), :id, :title, { selected: post.tag_ids },
                { multiple: true, required: true, class: 'standart-input js-multiple-select',
                        data: { controller: :tomselect, ajax_url: '/api/tags' }, placeholder:  t('.placeholders.tags') }
      .checkboxes
        .flex-inner
          = f.label :status, t('.status.label'), class: 'standart-label'
          = f.check_box :status, { data: { toggle: 'toggle', onlabel: t('.status.active'), offlabel: t('.status.disabled'), onstyle: 'success', offstyle: 'danger', class: 'switcher' } }, "active", "inactive"
        .flex-inner
          = f.label :main_post, t('.main_post'), class: 'standart-label'
          = f.check_box :main_post, { data: { toggle: 'toggle', onlabel: t('buttons.yes_text'), offlabel: t('buttons.no_text'), onstyle: 'success', offstyle: 'danger', class: 'switcher', style: "min-width: 300px !important"} }, "active", "inactive"
    .actions
      - if post.new_record?
        = link_to t('global.button.cancel'), management_root_path, class: 'main-btn not_filled'
        = f.submit t('global.button.create'), class: 'main-btn filled'
      - else
        = link_to t('global.button.cancel'), management_root_path, class: 'main-btn not_filled'
        = f.submit t('global.button.edit'), class: 'main-btn filled'